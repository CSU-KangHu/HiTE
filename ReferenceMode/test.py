import os

import codecs

import json
import time

from module.Util import judge_flank_align, flank_region_align_v1, read_fasta, store_fasta, Logger, \
    search_confident_tir_batch


def is_transposons(filter_dup_path, reference, threads, tmp_output_dir, flanking_len, blast_program_dir, log):
    log.logger.info('determine true TIR')

    log.logger.info('------flank TIR copy and see if the flanking regions are repeated')
    starttime = time.time()
    # 我们将copies扩展50bp，一个orig_query_name对应一个文件，然后做自比对。
    # 解析每个自比对文件，判断C0与C1,C2...等拷贝的比对情况，如果有flanking区域包含在比对区域内，那么这条拷贝应该被抛弃，如果所有拷贝被抛弃，则该条序列应该是假阳性。
    flanking_len = 50
    similar_ratio = 0.1
    TE_type = 'tir'
    confident_copies = flank_region_align_v1(filter_dup_path, flanking_len, similar_ratio, reference, TE_type, tmp_output_dir, blast_program_dir, threads, ref_index, log)
    endtime = time.time()
    dtime = endtime - starttime
    log.logger.info("Running time of flanking TIR copy and see if the flanking regions are repeated: %.8s s" % (dtime))

    log.logger.info('------store confident TIR sequences')
    filter_dup_names, filter_dup_contigs = read_fasta(filter_dup_path)
    confident_tir_path = tmp_output_dir + '/confident_tir_'+str(ref_index)+'.fa'
    confident_tir = {}
    for name in confident_copies.keys():
        copy_list = confident_copies[name]
        if len(copy_list) >= 2:
            confident_tir[name] = filter_dup_contigs[name]
    store_fasta(confident_tir, confident_tir_path)

if __name__ == '__main__':
    # flanking_len = 50
    # similar_ratio = 0.1
    # flanking_region_distance = int(flanking_len * similar_ratio)
    # output = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/cb4/flank_tir_align/2.out'
    # res = judge_flank_align(flanking_region_distance, output, flanking_len)
    # print(res)

    # # 获取想要序列对应的flank align output
    # tmp_output_dir = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/oryza_sativa'
    # tmp_dir = tmp_output_dir + '/tir_tsd_temp'
    # for i in range(48):
    #     output_path = tmp_dir + '/' + str(i) + '.fa'
    #     if not os.path.exists(output_path):
    #         continue
    #     with open(output_path, 'r') as f_r:
    #         for line in f_r:
    #             if line.__contains__('N_32617'):
    #                 print(i)
    #                 break
    # orig_seq = 'TTCTGGAGCACTGTATTCCAGAGCAGTTTTATTTCAGAACAGTTCTACAGTACTCCACAAAAATTTAATTCCACCCTCAGTTTGTACTGAAACACCTATTTAGGTCAATATTCGTGAAAAGGTGTCGACATGAAAAATAAAAGTCTCCCTTCAAAACCTACGTACGAAAAGCTTGGAGCCATCAACGTGACCCGGAAAAGAGAAACCGGAAAAAATCCAAAAATCACGTTTTGGCCGATCCACAAAAGTTTAATTCCACTCTGAAAAAGTGAGATTTTGGAGGTTTTGAAGCTTTGCGACCACCTTTTGAAGGCCTGAATTCGAAAAATTTTAAGATTCTCATACATATACACAGAGACCATTGTACACGGTTACTGATATCCGGATTTCCGGATTCCGGAATCAGGATTTCCGGGTTCAGAGTTCCGGATTCCGGTTTTTTTGGGTTCTGGATTATGTTTACTGAAGTGTGTGTAGTGGATTTAGAATATGTACTCCGGATTCTGTGTTCCGGATTCCGGATGATGGATTCCGGTTTCCGGATTAGCTTTCTGAATGAGTTAAAGTGTCCCGAGAATCTGAATATCAGGTTTTCTTGACAAACAAGCGTTTCAGAAAGTTTCTGGAAAGTTACGAAGGCTTCTGAGGTTCTGAGGGATTCTGAAGGGACCTGTAATTTTGGGAGATTCTCCAGGATCATGAGAAACGGCCCAGTAGATTGCGTTCTAACTACCATGACCTCTGAAAACACCAACGTGCATGAAGACGATATACCAATTCATGTTTCTACTCCAAAAAGGCGAAATTCCGAGACGATGAGTTGATAGTCGGATCCGTTCATCTTCTTCGAAACAAAAAACTGTTTGACTGGACCTGCCGACGAGATTGTCGTTCTTGCCATCACGCCTTCATCTGTGAAACTTCTTCACGAGAATCTTATTTTTTGTTTTCGGGAACGCAATCTACTGTGCCGTTTCTCATGATTCAGGAGAATCTCCCAGAATTCCAGGTCCCTTCAGAATCCCTCAGAACCTCAGAAGCTTTCGTAACTTTCCAGAAACTTTCTGAAACGCTTGTTTGTCAAGGAAACCTGATATTCAGATTCCCGGGACACTTTAACTCATTCAGGAAGCTAATCCGGAATCCGGAATTTTGAATCCGGAAGTCCTGATTCCGGAATCCGGAAATCCGGATATCTGACATCCGGAATCCGGAAATCCGGATATCTGACATCCGGAATCCGGATATCAGTAACCGTGTATAATGGTCTCCGTGTATGGGGGTCAGAATCTTAAAATTCTTCAAATTCAGGCCTTCAAAAGGTGGTCGCAGAGCTTCAAAACTTCCAAAATCTCACTTTTTCAGAGACGAATTAAACTTTTGTGGATCGGCCAAAACGTGATTTTCGGATTTTTTCCGGTTTCTCTTTTCCGGGTCACGTTGATGGCTCCAAATTTTTCGTACTTAGGTTTTGAAGGGAGACCTTTATTTTTCATGTTGACACCTTTTCACGAATATTGACCTAAATAGGTGTTTCAGTACAAACTGAGGGTGGAATTAAACTTTTGTGGAGTACTGTATTTTACGCGGTTCTATGTAAGAGCAGTTCTATTTCAGGACAGTTT'
    # tir_start = 51
    # tir_end = 50+1525
    # tsd_search_distance = 50
    # query_name = 'N_634'
    # copy_index = 0
    # plant = 0
    # cur_candidate_TIRs = search_confident_tir(orig_seq, tir_start, tir_end, tsd_search_distance, query_name, copy_index, plant)
    # cur_candidate_TIRs_path = tir_tsd_dir + '/' + str(query_name) + '.fa'
    # itr_contigs = judge_itr_structure(cur_candidate_TIRs, cur_candidate_TIRs_path, plant, TRsearch_dir, tir_tsd_dir)
    # TRsearch_dir = '/public/home/hpc194701009/HiTE/ReferenceMode/tools/'
    # tir_seq = 'CTCCCTCCGTCCCAAAATATAAGCATTTCTAGCTATGAATCTGGACAACTGTATGTCCAGATTCATAGCTAAAAGTTGTTATATTTTAGGACGGAGGTAG'
    # tir_seq = 'C'
    # output = run_itrsearch(TRsearch_dir, tir_seq)
    # output = str(output)
    # if output != '':
    #     seq = output.split('\n')[1]
    #     query_name = 'N_1' + '-tsd_' + 'TA'
    #     itr_contigs = {}
    #     itr_contigs[query_name] = seq
    #     print(itr_contigs)

    # orig_seq = 'CATAAACACTCTAGTAGAAGGCTACTCTACACCTGCACTTTGAGCAAATATATCTCGGTTCCTGTAAAAGGTATCAAAAAGTGGTCAACTGACAAAATGTTTTTGATATTATAATAAACATTTTATTAGTTGACAACTTTTTGATATCTTTCAAAGGAATCGAGATATCCAAGCTCAAAGTTGACGGTTTCGGTGGCTTTCTATTAGAGGGTATCA'
    # tir_tsd_dir = ''
    # plant = 0
    # flanking_len = 50
    # tsd_search_distance = flanking_len
    # tir_start = flanking_len + 1
    # tir_end = flanking_len + 116
    # copy_ref_name = 'NC_013488.2$19000000'
    # copy_ref_start =26386
    # copy_ref_end =26501
    #
    # search_confident_tir_v1(orig_seq, tir_start, tir_end, copy_ref_name, copy_ref_start, copy_ref_end,
    #                         tsd_search_distance, '', plant)


    # tmp_output_dir = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/oryza_sativa'
    # TRsearch_dir = '/public/home/hpc194701009/HiTE/ReferenceMode/tools/'
    # partition_index = 0
    # plant = 1
    # tir_tsd_dir = tmp_output_dir + '/tir_tsd_temp'
    # flanking_len = 100
    # copy_seq1 = 'CCCTTCAACCACCTCAAAGTGTCACTGCCCTGTTCGGCCCTTTCTCCTGAGTCTCCTCCCTTAAGAGCATGACCAAATGCACCGTCGAAGCAACCAAATCACTACTGGAGAAGTGCTCATCTCTCCCGGTTCGCAACCCCCTTTACCCGTGGGTAGCGAACCGGGAGGGAGAATCCGGGACTAAAGATGGCGGTCGTTAGTCCCGGTTCAAATACCTGGGAGTATATCTCCATCTTTAGTCCCGGTTGGTGACACCAACCGGGACTAAAGATGGCTGAGCCACGTGGCCGGCAAAGCCATCTTTAGACTAAAGAATTTTCTTTTATTTTTTTTTAATTTTGTTGTGCTGCCTGGTGTACATATATATATATATATGAATATATATCATGTATATATATATATATATGCATAATATAGAAATGTATATATTACACACATGCATATATGTATATATATACATACATATATATATATACATATATATATACATACACATATATATATATGTATGTATGTATATATGTATGTATGTATATACAAATATGTGTGCACTTAAGTAATTAGAGGCCATATGCATATATATATTAACAAAATATGAGTTTGCAAGTAAGTAAATATACATATATATTACCAAACCAAGTACACAAAAGTAAATGCATGTGTGCATATATGAATACATAGATATATATATTACAATTCGTTCGGACGTTGTAATATTTGTTTCTGCTACTACGACTTGGTGACATCGGAAGAAGAAGGACCGGCTTTATGAATAGTTGATCCATCGTAATAGAATTCTCCTGTGGGATGGAGAATATGCTTGTTGATGAATCCCATTATCTGTTCTTGAACAGCCCTTATGAAATCATCGTGGGTGGTGTTATCTATCAGGTAAATCATATGTTATTTGGAAAAAAAATGGGATTATATATATGAAACCAGTAAGCAATAATTGACGGAAGAATAAATTTACGTACTTCAAGGTCCTGGCCAGTCCTGATTTGGTGTGCTAAGCAGTGCATGTAATGGCATACGTAGTAGCCGCACAAGTTAGTCCCCTTTTCCTGCTTTGCACACTGAAAGAGAAACAACGAGAGATTTAGTATGCATATCTGATTTAGAACAAAGAAGTGATTCAATACAAAATTGGAGCTAGCATGTACCAACCGGAAAATTGAACCTCCGGGTGAGTTTTTCATTCCAGATCCCGCGGACCAATGTACGGAACCGAATCCATGCTCTATTTAGAGTTGTTAGGAAGGATTAATTTATTATCCGAGATCTAGTAGTTATACAATGATTCATAATGACAGTGCAATATATGACAATACCTATCTATCACTTCAAAAATCTTTGCGAAAGTTTTCTCCGGTTTATCCACTGAATCGTAGACATGAACTTTGGATTTCTCAAGGTCGAAAAGAAGAAGGACCCAATGGAATCTGCAATTTGCATTACATGATACATAGTATGATTGTAGGAACTTTGTAGGAACAAAATTGAAGGAACAAAATTGAAGTTAATTATGATTGTAGGAACTCACGATGTGTTGTAGGGAAGAAGTATGAACCTCTTATAATGCTGCTGCACCAGGAAATGGACGATATTGTCCTCGGTTTGTTTCTCGTATTGTTGTATCATCAGCGTGTTCACTTTGCGTGGGTCCATGAATCCAGTATTGAATTTGTTGTGTTGACGGCACAACTGAATCTCCATTCTACAACGGGGAAAAGGAATGTGTGTGAGCAACGTTCAAAGGAGGAACAAAATTGAACTATAAACAGTACTTACAAAGTCCACGCGCTGAGAATAGAGACGTCGAGGGCCTTCAGGTGGTATAAGTCGAAGACTTCTTTGTAGCGGATCCAAATAACATCTTCTCCTTGGTAATAATCTGAGTTTCGCACCCTAGCTCCGAACATCTATCTACCCATCACTGATTTGTCCATGTACCATTGATGGAACCGGTACATCTGTGTAGGTAGCTCTCTGATCTTATCAGGCATGACTAGCGGTTCACCGAGTTTAAACGTGTACATGACTGGAGCCGTTTCGATAGGTGCATCCTCTAGCAACTGCTCCATACTCAGTCCCGTATCTTTCAAGAAGTTGCATATCTCTAGTTGTGCCGGTTCTACGACTAACGCTTCAACCTCTTGTCGTGGCTGTTGCCCCAGCTGAGGGACTTCCTTTCCGCACTTCACTGCTAAAGGCTTGGCTTTAAGAGCCTTCCTCAATGTTCGATCATAGTCAGAAACTTCGACCGGTTTGCCCGGTTCGGCCATCTTAATAAAGTGATCCTGAACCTCCGGGGCTATAGGGATCTTCTTTTCCGGACTACGTGGCTTCAACTGCTCCCTAACTTCCGCTCTAACGGCTTCATCGAGCTCCTCCGGAGTCAAGTCGTACGCCCTTTTCTTGAGAGCGGGGAGCCATGGCTCGTCAGATCTGGCTTTCTTCTTCGACCTTGATGGTGCGGGTTCATATGGGCGGGACCTTGACAGTGTAGACTTGGCAGCAAGTGCACGTGGAGGAGTAGTTGCCCGCGAGCCCGACGGTGCAGACTTGGCAGCTGGTGCACGCGGAGGAGGTGGTGGTGCAGGGGAAGGAGCCAGAGGAGACTGACGAGGCGGTGATGGCGGAGGAGACTGTGCTTGCGGCGGGGAAGGAGGAGCGGGCGGCCGTTCTTGCCCGGGAAACACGATGTACTTCTTACGCCAGAGTATGATGGCGTGGGCTATGTCTCCAAGTTTCTTCTCCCCGTCTCCTCCGGGGATGTCAAGCTCGAGATCCTCGTAGGTTCGTTCCACTAGCTCTATCTCGACCTTCGCATATCCATGTGGAATGGGCCTGCAATGGTATGTACTCGAAGGGTCCGTGGATATGGCCATGCCCGACGTGACCTTCACAAGAAGTATAGTTCATTAATTACTAATCAACATATATATGTAACAAATTTCGCATTTCGCATACCTTGATAGACAAGTTCCTGAATGGAGTATGCATATCGCAGGGTGTTCGCTGCGTGATATCACCAACGGGGAAGTGGGTTGCTTCGTGAGCTGCCACTGCCTCAATGCCCTCTGATCCAACTTGGCCCGTTGATGCGCAGCTGCTGCGGTTGCCCGAGGGGCTCACCATGACGGGCGCTTGTGTTTCCATTCCGCGCTGCTCGGCCAGGCGTTGGTCCACCTGTCTTGTCACCTCCTCTTGCATCCTTGCCTCGTAGGTGGACACCCTGTACTCAAGATCGACGATCTTAGCTTCTGTATCCCTCTTGCTCCTCATCCAACTCCTATACGTGTGGATGTCCTCTTTGAATCCATATTTCCAAGGAATGACGCCTTTTCCTCGCATTCGTCCTAGATGCTCAGGATTCTGTAGTGCGAGGGTGAGCTCGTCCTTCTCTGTCGGGCCGGAAAGTCCCCTGCGTAGAGGCTTCAATTGCATCCGCAAGTCGGCGTGCTGCATCTCGAATCTCATCGCCGAATATGAGGGAGCCATCACCTGGATTGAGCGATCCACCGTGTGCATAGAACCAGTTCCTCGATCGCTCAGGCCAATTAGCCGTGGCCGGCTCGATACCCCTTGCTATCAAGTCAGCTTCCAACTTGTCCCACTTGGGGATTGCCTTTGCATATCCGCCTGACCCAAGCCGGTGATGGTATTTCTTCTTAGCTGCATTGGCTTTGTTCTTTTCTATCTGTGCTTGCCCTTGCGCTCCAGTCTTGTATGCCACAAACGCATCCCAGTGATCCCTAAACTTGTTATGCACGTTGAAATTAGGTATCAAGCCCTTGAGGATGTATCTCTTGTACAGATCTGATTTGTAGCTCTGGAATAGTTCTGCCATTTTCTTCAGGGTCCATTCTTTGCATCTGGGACGATCTGCCTCAGGGATCGTGAATGTCTCCAGCATGGTGGTCCACAACATGTCCTTCTCTGTGTCAGGGAGAAAGCTATCTTCATCCCCGCGTGACCTAGTTCGACGCCAGTATACTATGCTGATGGGGACGTTGTCTCTCACGACCCAACCACAATGATTCACAAACTTTCGTCCTATACCCGTCGGGGCTACTGGTTCGCCGTCTGGGGCAATCTCAGTAACGATGTGCCTTCCCTCAAGCTTCATCGCGGGACCTCTTTTCCCACGTGGCCTCTTCTGTCCGGCCGACGGTTGACTATCAATCCCCTCCTCGGTCCCCTCCTAGTTAGCCTCCTGGTTACCCTCATCGTTGCCCTCCTCGTTCAGGTATTGGTTGGGATCCTCGTTCCCCTCATCATCCACCCAGTACTGACTGCTGCCATCTGCGATCGTGTCTAACAGGATTTGTTCGTCATCGCGGTCTGCCATCTATGCGTGCAAAGAAAAAAAGACAGTGAGGTCATGGACATCAACATGTACAGCTCAGACGTCTAAACCCTACAAGTATACATGTATAATTCGCTAAGTCGTTGTTCTCGTTAAGTCGTTAAGTCGCTAAGTCGTCGTTCTCGCTAAGTCACTAACTCGCTAAGACGCTAAGTCGTTGTCCGTCAAAGTCGCTAAGTCGTCGTTCGTGAAAGTCGCTAAGTCGCTAAGTCGTCGTTCGTGAAAGTCGCTAAGTCGTCATTCGTGAAAGTCGCTAAGTCGCTAAGTCATTGTCTGTCAAAGTCGCTAAGTCGTCATTCGTGAAAGTCGTTTAGTCACTAATACGTCGTTCTCGCTAAGTCGCTAAGTCGCTAAGACGTCGTTCTCGCTAAGTCGCTAAGTCGTCGTTCGTGAAAGTCGTTAAGTCGCTAAGTTGCTAAGACGTCGTTCTCGCTAAGTCGCTAAGTCACTAAGTCATCGTTCGCTAAAACGTTCTCGTTCAAACGTTCCACCGTGGAGTCGGCGGTGGAGTCGGCGCACGGCGGCGGCGGCGGTGGCGGCGGCGGTGGAGTCGGCGCGTGGCGGCGGCGGTGGTGGAGTCGGCGGCAGCGGTGGCGGCGGTGGCGGCGGCGGAGGTGGAGTCGGTGCGCGGCGGCGGCGGCGGCGGTGGAGGTGGAGTCGGCGCGCGGCGGCGGCGGCCGGCGGTGGAGTCGGCGACGAAGATGACGGCGAGGTCGATCCGGTCGGCCGGCGCGTGTCAAGATCGATCGAGAGAGAGAGAATGCGAGATCGGAGGCGCAAGATTTGCGCCCCTCACCTTGAGGGAGGCAACGCTGCCGGTTGCGTTCGCGAGGGCAGATGAGCGCGGCGAGCACGACGACGATGACGGCGGAGGCGGCGACGACGTCTGGGGCGGTAATGGCGCGGGAGGAAGAAGATCGATCGTGGAGAAGTCTAAGTGTGGTGCAGGGAAGCCGATGCAGTGGATATTTATACCCGGTAATCTTTTGTCCCGGTTCGTGGCTTCAACCGGGACTAAAGATATCTTTAGTCCCGGTTGGTAGTTACAACCGGGAGTAAAGAACAAATGTTTACTCCCGGTTGTTACTACTAACCGGGACTAAAGACATCTTTAGTCCCAGTGGAAGCCACAAACCGGGACAAAAGATGTTTTCCCGCTATTCCAAAATTTGTATTGGTCCCGGATACTGTTAATAGCCAGGACTAAAGATGTGTACACAAAACCGATTTATGGCCTTCTTAAATTGTCTTACAAGTCGAAATAAATACCAATAAATCCAATATAATTAGCACATGGCCGATTTATATGGTTTCAAAGTCCAAATAAATTCCAAAATCGTACGTAATTTACGTATGGCCGAATTAAATGTTTTCAAAATTTTAATAAATAGAAATAAACATGATATGCCTAAGTAAATGGTCTCAAAGTATAAATAAATAGAAATAATCATTTATAATTAACATAAGGCCAATTTAATTATATTCAAAGTGTAAATAAATAGAAATTATCATTTATAATTAAGATATGGCCTACTTAATTGTTTTCAAAGTGGAAATAAATACCAATAATCAGTTATAAATAACATATTGCCTAATTAATTGTATTCAAAGTGTAAATCAATGGAAGTGACCATTTATAAATATCATATGGTTGAAAAATAGTAATACATTACAAATTAAGCAGTTGAGAATAATATATTGATCCAAATTGTTCGACCTTCAATACAATACAAATAATTTACATCTTCCATCAAACAACCTAGGTCACTGTCTTCCTCACGTACTTTCTCCTCACTATTGTTCCTTCGCTATGATCGTTGCGTGAGTACGGCGTGTCCTCCTATGATAGTATGATGCTCGGGTCAACCATCACTGCAAACGGAGGTTGCCCCTCAAACAGATCGTAATTTTCGTCAGTCTTATCCTCGACTCCAACGATTTTCCTCTTGCCTGGGAGAACAACATGGCGTCTTGGCTCATCGGGCCCTTTCCCCTTCTTTGGTTTGCTATCCATGTCCTTCACGTAAAAAACTTGTATTACATCATTGGCTAGAACGAATGGTTCATCTGAGTATCCTACCTTATTTAAGTCAACCGTTGTCATCCCGCTGTCATCAATCGTTACGCCTCCACCAGTCAGCCTAACCCATTGGCACCGAAACAGAGGGACCTTCAGGGGTCCATACTCTAGTTCCCAAATGTTGTCGATGACACCGTAATATGTGCTAGTTGGACCATCGTGTCCTATGGCATCGATACGAACACCACTGTTCTGGTTCGTGTTCTTTTTGTCTTAGGCTCTTGTGTAAAAAGTGTATCCATTGATTTCATAACCTTGGAATGTAGTTACCGAGCCGGAGGGTCCCCTAGCCAAGAAGGCTAGTTGTCGGTCAGTTGTCTCGTTACCCAGGAGGTGTTCTTGCAGCCAAGCGGGGAAAGTATCAATATGATGGCGTGTAATCCAGGCTTCGGACTTGCCACTGTTTTCTGAGCGAACAATCGCAAGGTGCTCATCGATGTAAGGAGCAACCAACGAAGATTATTGCAAAACCGTGAAATGTGTTTTACGGAATAAATCGTTGTCTACAGTCATAATTGCTCTCCTTCCAAGTGTGCCCTTTCCCCGTAGTCTCCCCTCATGGATTGATTCGGGTACCCCGATTGGCTCGAGGTCTTCAATAAAATCTACGCAGAACTCAATGACCTCCTCTGTTCCATACCCCTTCGCGATGCTTGCTTCCGGACGAGAACGGTTACGAACGTACTTCTTTAGAACGCCCATGTACCTCTCGAAAGGAAACATGTTGTGTAGGTACATAGGACCGAGAATACCGATCTCTTTTACAAGGTGGCACAGAAGATGCGTCATTATATTGAAGAATGAGGGTGGAAAGATCAACTCAAAGCTGACAAGGCATTGCACCACGTCATGCTGAAGGGCGGCTAAACTTTCTAGATCGATGACTTTCTGTGAAATTGCGTTCATGAAAGCACAAAGCTTCGTTATTGTTGCCCGCACATTATCAGGAAGGATACCACGAATTATAACAGGAAGCAGCTGTGTCATAAGCACGTGACAGTCATGAGACTTTAGTTTTGTGAACTTCTTATCCTTCGTGCTTATTATTCTCTTTACATTCGAGGAGTATCCGGACGGTACCTTGATGCTCTCTAGGCATTGAAACATACTCTCCTTCTCTTCCTTGCTTAGGGTGTAGCTCGCCGGACTTAAGTAATGGATTCCTTTATCGTTCGGTTCCGGATGAAGGCCCTCGCGTTGTTCCATATGCTTGAGATCATTGCGTGCTTCGAGTGTATCTTTGGACTTCCCATATACACCTAAGAAGCCCAGCAGGTTTATGCAAAGGTTCTTAGTAAGGTGCATCACGTCGATTGCGTGGCGAATGTCCAAGACCTCCCAATAGGGTACCTCCCAAAAAATAGAGTTTTTCTTCCACATCGCTGCGTGACCATCTTCGCTCTCTATAGGTTGGCTACCAGGCCCCTTTCCAGATACTACTTTCAGATCCTTCACCATTTCGAACACTGCTTTCCCGTTGCGATGTTTAGGCTTAGTACGATGGTCTGCCTTTTGTTCGAAGTGCTTGCCTTTTTTCCGTACAGGGTGGTTTGCAGCAAGGAATCGACGATGGCCCATGTACACAACCTTCCTGCAATGCTTCAGATAAGTACTTTCAGTTTCATCCAAACAGTGAGTGCAGGCGTTGTACCCCTTGTTTGATTGTCCGGATAGGTTACTAAGCGCAGGCCAATCGTTAATTGTAACGAATAGCAACGCTCGTAGGTTAAATTGCTCCTGCTTGTCCTCATCCCACACGGGGACACCCTCTTTCCTCCACAGCACTTTCAGATCTTCAACCAATAGTCTTAGGTACACATCAATGTCGTTACCAGGTTGCTTCGGGCCTTGAATAATAATCGGCATCATGATGTACTTCCACTTCATGCATAGCCAAGGGGGAAGATTGTAGATGCACATGGTGACTGGCCAGGTGCTATGGCCACTGCTCATCTCTCCAAATGGATTCATTCCATCCGTGCTTAAACCGAACCTCACGTTTCGTGCATCTTCGCCGAAGTCTTTAAATGTTCTGTTGATATTTCGCCACTGCGACCCGTCAGCGGGGTGTCTCAGCATCCCATCCTATTTACGTTCTTCTGCGTGCCACCGCATCATTCTAGCATGTGATTTGTTCCTGAAAAACCGCTTCAGCCTTGGTATTATAGGGAAATACCACATCACTTTAGCAGGAATTCTCTTCTTCAAAGGCTGTCCGTCAACTTCACCTAGATCATCTCGTCTTATCTTGTATCGTAGTGCTTTGCAAATAGGGCATGCTTCTAGGTTTTCGTACTCACTGCGATACAGGATATAGTCGTTCGGACGCGCGTGAATCTTCTGTACTTCCAGACCTAGAGGGCAGACTATCTTCTTAGCTTCGTACGTACTTTCGGGCAATTCGTTCCCCTCCGGAAGAATGTTCTTTACGAGTTTCAATAACTCGCCGAATGCCTTGTCACTCACACCATTTTTAGCCTTCCATTGCAAGAATTCTAGGATGGTACTCAACTTTTTGTAGCCCTTCTCGCAACCTGGGTACAACGTTGTTCTGTGGTCCGCTAACATGCGCTCCAGTTTCTGCACCTCCTTTTCACTTTCGCAGTCCTCCTGTAAGTCCCGCAATATTTGACCAAGTTCATCAGCACCGGCATTCCCTTCAACATCCAGCTCCGCCTCGCCCATTGTGTTTTCTTCAAATCCGCCATACTGAGCCCAGTCTGGAATGTTCTCATCTTCTACTTCATCTTCTTCCATTGCAACCCCAACCTCTCCGTGCGAGGTCCAACAATTGTAGCTACGCATGAACCCCCACTGAAACAGGTGGGCATGAATAGTTCGTGTGGTGGAATACTCCTTCTGGTTTTTGCACTTGTCACATGGACAGCTTATAAAACCGTTACGCTTGTTATCATTAGCCCCACCCAAAAAATAATGCACGCCGTCAATAAACTCTTTCGACCACCAATCCGCGTACATCCATTGCCGATCCATCTATATGAAATACATATAAATCGTAATTATACAAAATCCAAGATTTACAAGGTAATTACATAATAACACAATAATTGAATATAATTATTCATACAATTAATCATTATTATTAAATTCATTGTACATATTTTTCATGTTTTAATTACATTATAAACAAATATTTAATATGTTTTTCTTATTTTAATATTAAATTAGCTTAGTTTTATAATTTCATACAAAATTATATGTAATTATTCAAACAAGTATTTATAATCTTCTTTATTCCCTACAAACACTTTCTCTCTCATCATCTTCCATCACATTTTCTAGAGGGAAAAATATGTAAAAAAAAATAGCTCCAAATGTAGATGCTAAGCAAAACAAAGAGTAGGATGAAGTTGCTAACCTTTTGAAGACCTCAAATTTGTATATTACCACCAAAAAAATTTACTTAAAATTTTGACAGCACCTCCCTCCCTCAAAGCTTAATTTTGAAGCAATGGCTCGGGCTGGAGGAGGAAGAAGGGGTATATAAAGCTGTGCAACTTTAGTCCCGGTTGGTAACACCAATCGGGCATAAAGATCTCAAATCACTTTAGTCCCGGTTGGTAACACGAACCGAGACTAAAGATCCCAAGCCCCCCGACAGAGGTCTGACATGCCCTGTCAGGAGGTGAACCGGGACTAAAGATGATCTTTAGTCCTGGTTGGTGTTACCAACCGGGACTAAAAATCCCTTCGTCCCGTTGAAGTAATAAACCGGGACTAATAAGCCACTTTAGTCCCGGTTCGTTTTGGAACCGGGACTATTGTGGAAATTGGCCGACCCTCCAAATACCTCTTCTCCAGTAGTGAATCCACCATCGGAACCACTGGTATACATTGCTAATAGTTGCTATTATGTCATGTATGCTCCATCTAGTTTGAGATAATGTGATTGAAAGAGTCTTGAGGATT'
    # copy_seq2 = 'CCATTTAACAAAATTACTTTGCCTATTCAGTATTGTGCTCATTTTATCATATATCTTGAGTAGAGTTTAATGTTCATTGGTTAAAACGAAATAATCCCGGTTCCACAATAGTCCCAGTTCCAAAACGAACCGGGACTAAAGTGGCTTATTAGTCCCGGTTTATTACTTCAACGGGACGAAGGGATCTTTAGTCCCGGTTGGTCTTTAGTCCCGGTTCGCCTCCTGACAGGGCATGTCAGACCTATGTCAGGGGGGCTTGGGATCTTTAGTCTCGGTTCGTGTTACCAACCGGGACTAAAGATCTTTAGTCCCGGTTGGTAATACAAACCGGGACTAAAGTGATTTGAGATCTTTATGCCCGGTTGGTGTTACAAACCGAGACTAAAGTTGCACAGCTTTATATACCCCTTCTTCCTCCTCCAGCCCGAGCCATTGCTTCAAAATTAAGCTTTGAGGGAGGGAGGTGCTGTCAAAATTTTAAGCAAATTTTTTTGGTGGTAATATACAAATTTGAGGTCTTCAAAAGGTTAGTAACTTCATCCTACTCTTTGTTTTGCTTAGCATCTACATTTGGAGCTATTTTTTTTACATATTTTTCCCTCTAGAAAATGTGATGGAAGATGATGAGAGAGAAAGTGTGTGTAGGGAATAAAGAAGATTATAAATACTTGTTTGAATTATTACATATAATTTTGTATGAAATTATAAAACTAAGCTAATTTAATATTAAAATAATAAAAACATATTAAATATTTGTTTATAATGTAATTAAAACATGAAAAATATATACAATGAATTTAATAATAATGATTAATTGTATGAATAATTATATTCAATTATTGTATTATTATGTAATTACCTTGTAAATCTTGGATTTTGTATAATTACGATTTATATGTATTTCATATAGATGGATCAGCAATGGATGTACGCGGATCGGCGGTCGAAAGAGTTTATTGACGGCGTACAATATTTTTTGGGTGTGGCCAATGATAACAAGCGTAACGGTTTTATAAGTTGTCCATGCGACAAGTGCAAAAACCAGAAGGAGTATTCCACCACACGAACTATTCATGCCCACCTGTTTCATTGGGGGTTCATGCGTAGCTACAATTGTTGGACCTCGCACGGAGAGGTTGGGGTTGCAATGGAAGAAGATGAAGTAGAAGATGAGAACATTCCGGACTGGGCTCAGTATGGCGGATTTGAAGAAAACACAATGGGCGAGGCAGAGCTGGATGTTGAAGGGAATGACGGTGCTGATGAACTTGGTCAAATATTGCGGGACTTACAGGAGGACTGCGAAAGTGGAAAGGAGGTGCAGAAACTGGAGCGCATGTTAGCGGACCACAGAACAGCGTTGTACCCAGGTTGCGAGAAGGGCTACAAAAAGTTGAGTACAATCCTAGAATTCTTGCAATGGAAGGCTAAAAATGGTGTGAGTGACAAGGCATTCGGCGAGTTATTGAAACTCGTAAAGAACATTCTTCCGGAGGGGAACGAATTGCCCGAAAGTACGCACGAAGCTAAGAAGACAGTCTGCCCTCTAGGTCTGGAAGTACAGAAGATTCACGCGTGTCCGAACGACTGTATCCTGTATCGCGGTGAGTACGAAAACCTGGAAGCATGCCCTGTTTGCAAAGCACTATGATACAAGATAAGACGAGATGATCCAGGTGAAGTTGACGGACAGCCTTTGAAGAAGAGAATTCCTGCTAAGGTGATGTGGTATTTCCCTATAATACCAAGGCTGAAGCGGTTTTTCAGGAACAAATCACATGCTAGAATGATGCGGTGGCATGCAGAAGAACGTAAACAGGATGGGATGCTGAGACACCCCGCTGACGGGTCGCAGTGGCGAAATATCGACAGAACATTTAAAGACTTCGGCGAGGATGCACGAAACGTGAGGTTCGGTTTAAGCACGGATGGAATGAATACGTTTGGAGAGATGAGCAGTGGCCATAGCACCTGGCCAGTCACCATGTGCATCTACAATCTTCCCCCTTGGCTATGCATGAAGTGGAAGTACATCATGATGCCGATTATTATTCAAGGCCCAAAGCAACTTGGTAACGACATTGATGTGTACCTAAGACCATTGGTTGAAGATCTGAAAGTGTTGTGGAGGAAAGAGGGCGTCCCCGTGTGGGATGAGGACAAGCAAGAGCAATTTAACCTACGAGCATTGCTATTCGTTACAATTAACGATTGGCCTGCACTTAGTAACCTATCCGGACAATCAAACAAGGGGTACAACGCTTGCACTCACTGTTTGGATGAAACTGAAAGTACTTATCTAAAGCATTGCAGGAAGGTTGTGTACATGGGCCATCGTCGATTCCTTGCTGCAAACCACCTTGTACGGAAAAAAGGCAAGCACTTCGAACAGAAGGCAAACCATCGTACTAAGCCTAAACATCGCAACGGGAAAGCAGTGTTCGAAATGGTGAAGGATCTGAAAGTAGTATTTGGAAAGGGGCCTAGCAGCCAACCTATAGAGAGCAAAGATGGTCACGTGGCGATGTGGAAGAAAAACTCTATTTTTTGGGAGCTACCCTATTGGGAGGTCTTGGACGTTCGCCACGCAATCGACATGATGCACCTCACTAAGAACCTTTGCGTAAACCTGCTGGGCTTCTTAGACGTATATGGGAAGTCCAAAGATACACTCGAAGCACGCAATGATCTCAAGCATATGGAACAACGCGAGGGCCTTCATCCGGAACCGAACAAGAAAGGAAGCCATTACTTAAGTCCGGCGAGCTACACCCTAAGCAAGGAAGATAAGGAGAGTATGTTTCAATGCCTAGAGAGCATCAAGGTACCGTCCGGATACTCCTCCAATGTAAAGAGAATAATAAGCACGAAGGATAAGAAGTTCACAAACCTAAAGTCTCATGACTGTCACGTGCTTATGACACAGCTGCTTCCTGTTATAATTCGTGGTATCCTTCCTGATAATGTGCGGGCAACAATAACGAAGCTTTGTGCTTTCATGAACGCAATTTCACAGAAAGTCATCGATCCAGAAAGTTTAGCCGCCCTTCAGCATGACGTGGTGCAATGCCTTGTCAGCTTTGAGTTGATCTTTCCACCGTCATTCTTCAATATAATGACGCATCTTCTGTGCCACCTTGTAAAAGAGATCGGTATTCTCGGTCCTGTGTACCTACACAACATGTTTCCTTTCGAGAGGTACATGGGCGTTCTAAAGAAGTACGTTCGTAACCGTTCTCGTCCGGAAGCAAGCATCGCGAAGGGGTATGGAACAGAGGAGGTCATTGAGTTCTGCGTAGATTTTATTGAAGACCTCGAGCCAATCAGGGTACCCGAATCAATCCATGAGGGGAGACTACGGGGAAAGGGCACACTTGGAAGGAGAGCAATTATGACTGTAGACAACGGTTTATTCCGTAAAGCACATTTCACGGTTTTGCAACAATCTTCGTTGGTTGCTCCTTACATCGATGAGCACCTTGCGATTGTTCGCTCAGAAAGCAGTGGCAAGTCCGATGCCTGGATTACACGCCATCATATTGATACTTTCCCCGCTTGGCTGCGAGAACACCTCCTGGGTAACGAGACGATTGACCGACAACTAGCCTTCTTGGCTAGGGGACCCTCCGGCTCGGTAACTACATTCCAAGGTTATGAAATCAATGGATACACTTTTTACACAAGAGCCCAAGACAAAAGGAGCACGAACCAGAACAGTGGTGTTCGTATCGATGCCATAGGACACGATGGTCCAACTAGCACGTATTACGGTATTATCGACAACATTTGGGAACTAGAGTATGGACCCCTGAAGGTCCCTCTGTTTCGGTGCCAATGGGTTAGGCTGACTAGTGGAGGCATAACGATTGATGACAGCGGGATGACAACGGTTGACCTAAACAAGGTAGGATACTCAGATGAACCATTCGTTCTAGCCAATGATGTAACGCAAGTTTTTTACGTGAAGGACATGGATAGCAAACCAAAGAAGAGGAAAGGGCCCGATAAGCCAAGACGCCATGTTGTTCTCCCAGGAAAGAGGAAAATCATTGGAGTCGAGGATAAGACTGACGAAAATTACGATTTGTTTGAGGGGCAACCTCCGTTTGCAGTGACGGTTGACCCGAGCATCATACTATCAAAGGAGGACACGCCGTACTCACGCAACGATCATAGCGAAGGAACAATAGTGAGGAGAAAGTACGTGAGGAAGACAGTGACCTAGGTTGTTTGATGGAAGATGTAAATTATTTGTATTGTATTGAAGGTCGAACAATTTGGATCAATATATTATTCTCAACTGCTTAATTTGTAATGTATTACTATTTTTCAACCATATGATATTTATAAATGGTTACTTCCATTTATTTACACTTTGAATACAATTAATTAGGCAATATGTTATTTGTAACTGATTATTGGTATTTATTTCCACTTTGAAAACAATTAAGTAGGCCATATCTTAATTATAAATGATAATTTCTATTTATTTACACTTTGAATATAATTAAATTGGCCTTATGTTAATTATAAATGATTATTTCTATTTATTTATACTTTGAGACCATTTACTTAGGCATATCCTATTTATTTCTATTTATTAAAATTTTGAAAACATTTAATTCGGCCATACGTAAATTACGTACGATTTTGGTATTTATTTGGACTTTGAAACCATATAAATCAGCCATGTTCTAATTATATTGGATTTATTGGTATTTATTTCGACTTGTAAGACAATTTAAGAAGGCCATAAATCGGTTTTGTGTACACATCTTTAGTCCCGGTTATTAACAGTATCCGGGACCAATACAAATTTTGGAATAGAGGGAAAACATCTTTTGTCCCGGTTTGTGGCTTCCACTAGGCCTAAAGATATCTTTAGTCCCGGTTAGTAGTAACAACCGGGAGTAAACATTTGTTCTTTACTCCCGGTTGTTACTACCATGTTCTTTACTCCCGGTTGTTACTACCTATCTTTAGTCCCGGTTGAAGCCACGAACCGGGACAAAAGATTACCGGGTATAAATATCCACTGCATCGGCTTCCCCGCGCCACACTTAGACTTCTCCACGATCGATCTTCTTCCTCCCGCGCCATTACCGCCCCAGACGTCGCCGCTGCCTCCGCCATCGTCGTCATCGTGCTCGCCGCGCTCATCCGCCCTCGCAAACGCCACCGGCAGCGTTGCCTCCCTCAAGGTGAGGGGAGCAAATCTTGCGCCTCCGATCTCGCATTCTCTCTCTCTCTCTCGATCGATCTTGACACGCGCCGGCCGACCGGACCTCGCCGCCATCGTCGTCGCCGACTCCACCGCCGGCCGCCGCCGCCGCGCGCCGACTCCACCTCCACCGCCGCCGCGCGCCGACACCACCGCCGCCGCGCGCCACCTCCACCTCCACCGCCGCCGCCGCCGCCGCGCGCCGACTCCACCTCCGCCGCCGCCGCGTGCCGACTCCACCGCCGCCGCCATCGCCGCCGCCGCCGCGCGCCGACTCCACCGCCGACTCCACGGTCAAACGTTTGAACGAGAATGTTTTAGCGAACGACGACTTAGCGACTTAGCGACTTAGCGAGAACGACGTCTTAGCGACTTAGCGACTTAACGACTTTCACGAACGACGACTTAGCGACTTAACGACTTTCACGAACGACGACTTAGCGACTTAGCGACTTAGCGAGAACGACGTCTTAGCGACTAAATGACTTTCACGAACGACGACTTAGCGACTTTGACAGACAACGACTTAGCGACTTAGCGACTTTCACGAATGACGACTTAGCGACTTTCACGAACGACGACTTAGCAACTTAGCGACTTTCACGAACGACGACTTAGCGACTTTGACGGACAACGACTTAGCGACTTAGCGAGTTAGCGACTTAGCGAGAACGACGACTTAGCGACTTAACGACTTAACGAGAACAATGACTTAGCGAATTATACATGTAAACTTGTAGGGTTTAGACGTATGAGCTGTACATGTTGATGTCCATGACCTCACTGTCTTTTTTTCTTTGCACGCACAGATGGTAGACCGCGATGACGAACAAATCCTGTTAGACACGATCGCAGAGGGCAGCAGTCAGTACTGGGTAGATGATGAGGGGAACGAGGATCCCAACCAATACCTGAACGAGGAGGGCAATGATGAGGGTAACTAGGAGGCTAACCAGGAGGGGACCGAGGAGGGGACTGATAGTCAACCGTCGGCCGGACAGAAGAGGCCACGCGGGAAAAGAGGTCCCGTGATGAAGCTTGAGGGAAGGCACATCGTTACTGAGATTGCCCCAGACGGCGAACCAGTAGCCCCGGCGGGTATAGGACGAAAGTTTGTGAATCATTGTGGTTGGGTCGTGAGAGACAACGTCCCCATTAGCATAGTGTACTGGCGTCGAACTAGGTCATGCGGGGATGAAGATAGCTTTCTCCCTGACACAGAGAAGGACTTGTTGTGGACCACCATGCTGGAGACATTCACGATCCCTGAGGCAGATCGTCCCAGATGCAAAGAATGGACCCTGAAGAAAATGGCAGAACTATTCCAGAGCTACAAATCAGATTTGTACAAGAGATACATCCTCAAGGGCTTGACACCTGATTTCAACGTGCATAACAAGCTTAGGGATCACTGAGATGCGTTTGTGCCATACAAGACTGGAGCGCAAGGGCAAGCACAGATAGAAAAGAATAAAGCCAATGCAGCTAAGAAGAAATACCATCACCGGCTTGGGTCAGGCAGATATGGAAAGGCAATCCCCAAGTGGGACAAGTTGGAAGCTGACTTGATAGTAAGGGGTATCGAGCCGGCCACGGCTAATTGGCCTGAGCGATCGAGGAACTGGTTCTATGCACACGGTGGATCGCTCAATCTAGGTGATGGCTCCCTCATATTCGGCGATGAGATTCGAGATGCTGCACGCCGACTTGCGGATGCAATTGAAGCCTCTACGCAGGGGACTTTCCAGCCCGACAGAGAGAAGGACGAGCGCACCCTCGCACTACAGAATCCTGAGCATCCAGGACGAACGCGAGGAAAAGGCGTCCTTCCTTGGAAACATGGATTCAAAGAGGACATCCACATGTATGGGAGTCGGATGAGGAGCAAGAGGGATACAGAGGCTAAGATCGTCGATCTTGAGTACAGGGTGTCCACCTACGAGGCAAGGATGCAAGAGGAGGTGACAAGACAGGTGGACCAACGCCTGGCTGAGCAGCGCGGAATGGAAACACAAGCGCTCGTCATGGTGAGCCCCTCGGGCAACCGCAGCAGCTGCGCATCAACGGGCCAAGTTGGATCAGAGGGCATTGAGGCAGTGGCAGCTCACGAAGCAACCCACTTCCCCGTTGATGATATCACGCAGCGAACACCCTGCGATATGCATACTCCCTTTAGGAACTTGTCTATCAAGGTATGCGAAATGCGAAATTTGTTACATATATATGTTGATTAGTAATTAATGAACTATATTTCTTGTGAAGGTCGCGTCGGGCATGGCCATACCCACGGATCCTTCGAGTACATACCATTGCAGGCCCATTACACATGGATATGCGAAGGTCGAGATAGAGCTGGTGGAACGAACCTATGAGGATCTCGAGCTTGACATCCCCGGAGGAGACGGGGAGAAGAAACTTGGAGATACAGCCCACGCCATCATACTCTAGCTTAAGAAGTACATCGTGTTTCCCGGGCAAGAACGGCCGCTCGCTCCTCCTTCACCGCCGCAAGCACAGTCTCCTCCGCCATCACCGCCTCGTCAGTCTCCTCCGGCTCCTTCCCCTGCACCACCACCTCCTCCGCGTGCACCAGCTGCCAAGTCTGCACCGTCGGGCCCGCGGGCAACTACTCCTCCACGTGCACCTGCTGCCAAGTCTACACCGTCAAGGTCCCGCCCATATGAACCCACACCATCAAGGCCGAAGAAGAAAGCCAGATCTGACGAGCCACGGCTCCCCGCTCTCAAGAAAAGGGCGTACGACTTGACTCCGGGGGAGCTTGATGAAGCCGTAAGAGCGGAAGTTAGGGAGCAGTTGAAGCCACGTAGTCCAGAAAAGAAGATCCCTATAGCCCCAGAGGTTCAGGATCACTTTATTAAGATGGCCGAACCGGGCAAACCGGTCGAAGTTTTTGACTATGATCGAACATTGAGGAAGGCTCTTAAAGCCAAGCCTTCAGCAGTGAAGTGCGGAAAGGAAGTCCCTCAGCTGGGGCAACAGCCAAGACAAGAGGTTGAACCGTTAGTCATAGAACCGGCACAACTAGAGATATGCAACTTCTTGAAAGATACGGGACTGAGTATGGAGCAGTTGCTAGAGGACGCACCTATCGAAACGGCTCCGGTCATGTACACGTTTAAACTCGGTGAACCGCTAGTCACGCCTGATAAGATCAGAGAGCTACCTACACAGATGTACCGATTCCATCAATTGTACATGGACAAATCAGTGATGGGTAGAGAGATGTTCGGAGCTAGGGTGCGAAACTCAGATTATTACCAACGAGAAGATGTTATTTGAATCCGCTACAAAGAAGTTTTCGACTTATACCACCTGAAGGCCCTCGACGTCTCTATTCTTTGTGCTTGGACTTTGTAAGTACTGTTTATAGTTCAATTTTGTTCCTCGTTTGAACGTTGCTCACACACATTCCTTTTCCCCGTTGTAGAATGGAGATTCAGTTGTGCCGTCAACATAACAAATTCAATACTGGATTCATGGACCCACACAAAGTGAACACGCTGATGATACAACAATACGAGAAACAAACCGAGGACAATATCGTCCATTTCCTGGTGCAGCAGCATTATAAGAGGTTCATACTACTTCCCTACAACACATCGTGAGTTCCTACAATCATAATTAACTTCAATTTTGTTCCTTCAATTTTGTTCCTACAAAGTTCCTACAATTATACTATATATCATGTAATGCAAATTGCAGATTCCATTGGGTCCTTCTTCTTTTCGACCTTGAGAAATCCAAAGTTCATGTCTATGATTCAATGGATAAACCGGAGAAAACTTTCGCAAAGATTTTCGAAGTGATAGATAGGTATTGTCATATATTGCACTGTCATTATGAATCATTGTATAACTACTAGATCTCGGATAATAAATTAATCCTTCCTAACAACTCTAAATAGAGCATGGATTCGGTTCCGTACATTGGTCCGCGGGATCTGGAATGAAAAACTCACCCGGAGGTTCAATTTTCCGGTTAGTACATGCTAGCTTCAATTTTGTATTGAATCACTTCTTTGTTCTAAATCAGATATGCATACTAAATCTCTCGTTGTTTCTCTTTCAGTGTGCAAAGCAGGAAAATGGGACTAACTTGTGCGGCTACTACGTATGCCATTACATGCACTGCTTAGCACACCAAATCAGGACTGGCCAGGACCTTGAAGTACGTAAATTTATTCTTCCGTCAATTATTGCTTACTGGTTTTATATATATAATCCCGTTTTTTTCCAAATAACAGATGATTTACCTGATAGATAACACCACCCACGATGATTTCATAAGGACTGTTCAAGAATAGATAATGGGATTCATCAACAAGCATATTCTCCATCCCACAGGAGAATTCTATTACGATGGATCGACTATTCATAAAGCCGGTCCTTCTTCTTCCGATGTCACCAAGTCGTAGTAGCAGAAACAAAGATTACAACGTCCGAACGAATTGTAATATATATCTATATATTCATATATGCACACATGCATTTACTTTTGTGTACTTGGTTTGGTAATATATGTGTATATTTACTTACTTGCAAACTCATATTTTGTTAATATATATATGCATATGGCCTCTAATTACTTAAGTGCACACATATTTGTATATACATACATACATATATATATATATATATATATATATATATATATATATATATATATATATATATATATATACATATATATATATATATATATATGTATGTATGTATGTATGTATGTATGTATGTATGTATAATGTATATATTACACACATGCATATATGTGTGCACTATATACATTTCTATATTATACATATACATATATATATATATATATATATATATATATATATATATATATATATGTACACCAGGCAGCACAACCAAATTAAAAAAAAATAAAAGAAAATTCTTTAGTCCCGGTTGGTGTCACCAACCGGGACTAAAGATGGAGATTTACTCCCGGGTATTTGAACCGGGACTAAAGACCGCCATCTTTAGTCCCGGATTCTCCCTCCCGGTTCGCTACCCGGGAGTAAAGGGGGTTGCGAACGGGAGAGATGAGCACTTCTCCAGTAGTAAAACTTTAAAATAATACATGGTTTGAAATATATAAGTCATAAAAAATTTAAAATAGACTAGTACTACATAGTAAAATTTCAAAGTATAATATACACCGT'
    # #copy_seq3 = 'TTGTCACTACAGACGGCTAATGCGAAAGGTCTGTGTTTTAATTATTTTGGGTATTAAATAACCTGTATCACAAAAATGAGAAGCAGTCGGACTTGTCTATAGTCACTACGCCAGATCCTCACACCTCTGACGGGATACCTGTGACGGGCAAACGAATTGGTCAGTAGTGACCATTACCTTTGACGGGTTATACGGGATGCCGTCACCGGTGAGGCATCTGGCCGCGGCCCGTCACAGGTATCCCCTCACCTGTGACGGGCCGAAAGGAAAACCCGTCAGAGGTATACCAGTGACGAGTTTTTCTTCCAACCCGTCACTGGTATCCCCTCACCTGTGACGGGCCGATACATTAGAAGCCGTCAGAGGTGATGGGCCGCCACCTGTGACGGCTTTCATTTCTGGCCCGTCACAGGTGAGAGGATACCAGTGACGGGCCGTTGAATAGAAGCCCGTCAAAGGTATGAGCAATACCTTTGACGGGCTTTTTTTATCTAACCCGTTTGAGGTGTGTTGGGTCTATAAATACCCCCAAACTGCCAACTGCTTTCCATCCCGACCATTGTACTGTCCACAAATCGGTTGGGAGGGCAAGGGGGGCGATTTTTTACTAAAATTCAAGGTAAAAAACACATTATTCTCCATTCATTCTCAACATATCGATCATCATTTATTTTTCTTCGTATGTTGTTGATTTCAGATGGATCGTAGATGGATGTACTATGCGCATCGTTCGTCTACCGAGTATAGAGAGGGGGTCACTGAATTTGTCACATTTGCGGATAATGACAGAAAAAGTAGGATGAGCATGCACATGTTGTGCCCATGTAGGGACTGTAAGAATGAACAGATGATCGAAGACAAGGATGAAGTGCATGCTCATTTGATAATGAATGGATTCATGAAGAAATATACCTGCTGGACCAAGCATGGAGAGCAAGAGGCGCCTGATGTCGCAGCTGAAGAAGTGTTGGATCAGGATGTAGAGAACACCGCCGCAGCTCGAGAAGGCATGTTCGTACCTTCTCCTTTAGGTGGAGAGACCATAGATTTGGACACTCAATGTCTATCTACAATGTTGCATGACATTGAAGACGCAGAGGACAACGACAGAGATTATGAGAAGTTTAGTAAGTTGGTGGAAGATTGCCAGATGCCGTTGTATGATGGATGCAAGTCGAAGCACAGCAAGTTGTCATGCGTGTTGGAACTCATGAAGCTTAAGGCTAGTAATGGCTGGTCGGACAAGAGTTTTACAGAACTCTTTGAGCTGTTAAAGGATCTGTTGCCAGAGGGGAACAATTTACCTCAGACGACATATGAAGCGAAGCAAGTATTATGTCCGTTGGGCCTGGAGGTCAGAAGAATTCATGCATGTCCGAACGACTGCATTTTGTATTACAAGGAATACGCTGACTTGGATGTCTGCCCTATCTGTGGGGCATCAAGATACAAACGAGCAAAGAGTGAAGGTGAAGGAAGTAAGTCAAAGAGGGGAGGCCCAGCAAAGGTGGTGTGGTATCTCCCAATTGCGGAGCGCATGAAGAGAATGTTTGCGAACAAGGAACAAGCTAAGCTTGTGCGCTGGCATGCCGAAGAACGGAAAGTCGATACTATGCTGAGGCACCCAGCAGATTCAGTACAGTGGAGGACAATCGATAGGATTTACCAGGAATTCTCAAATGACCCAAGAAACATGCGTTTCGCAATGTGTACGGACGGCATTAATCCTTTTGGTGATTTGAGCAGTCGTCACAGTACATGGCCAGTTCTGCTTGTTAACTATAACCTTCCTCCCTGGTTGTGTTTCAAAAGAAAGTACATTATGCTTGCCATGCTCATTCAAGGACCGAGACAACCTGGCAACGATATCGATGTGTTCCTTGAACCGATAATCGATGACTTCGAAAGGCTATGGAATGAGGGCACACGAACATGGGACGCATATGCACAAGAGTATTTCAACCTCCATGCGATGCTGTTTTGTACCATCAACGATTATCCGGCCCTTGGCAACCTTTCTGGCCAAACTGTGAAAGGGAAATGGGCGTGTTCGGAGTGTATGGAGGAAACAAGAAGCAAATGGTTGAAGCATTCACACAAGACGGTCTACATGGGTCACAGGAGATTTCTCCCAAGGTATCACCCGTATAGGAATATGAGAAAGAATTTCAATGGACACAGAGATACAGCCGGACCCCCGACAGAGCTAACAGGGACAGAGGTGCACAACTTAGTGATGGGAATAACCAACGAGTTTGGAAAAAAGAGGAAAGTTGGAAAGCGAAAAGAGAAGAGCACATCGAAGGAAAAAACAGAGGAGCATGTGGAAAAACAAAAGACAAAAGAGAGGAGCATGTGGAAAAAGAAGTCAATATTCTGGAGACTACCATACTGGAAGGATCTTGAAGTTCGCCACTGCATAGATTTGATGCATGTCGAGAAGAATGTATGCGAGAGTTTAATGGGATTACTACTTAACCCAGGTACTACAAAGGATGGTCTCAACGCCCGACGAGATCTGGAAGATATGGGTGTTCGGTCGGAGCTACATCCCATAACCACGGAATCCGGCAGGGTTTACCTTCCTCCAGCCTGCTACACTCTCTCGAAAGAAGAGAAGATTGATTTGCTAACATGTTTGAGTGGTATAAAGGTTCCATCTGGTTACTCATCAAGAATCAGTAGGCTCGTTTCACTGCAAGATCTTAAGTTGGTTGGAATGAAGTCGCATGATTGCCACGTTCTTATCACACAGCTGTTGCCCGTTGCAATAAGGAATATTTTGCCTCCTAAGGTGCGACACACGATCCAGCGGTTGTGTTCCTTCTTCCATGCAATCGGCCAGAAGATCATTGATCCCGAGGGACTAGATGAACTACAGGCAGAACTTGTGAGAACCCTATGTCATCTTGAGATGTACTTTCCTCCAACTTTCTTTGACATAATGGAACATCTTCCGGTGCACCTTGTGAGGCAAACAAAGTGCTGTGGTCCAGCATTCATGACGCAGATGTATCCTTGCGAAAGGTACCTGGGGATCCTTAAGGGTTATGTACGGAACCGTTCACACCCCGAGGGGAGTATCATCGAGAGTTACACCACCGAAGAGGCCATCGAATTTTATGTGGACTACATGTCAGAAACATCTTCAATTGGATTACCACGATCTCATCACGAAGGGAGGCTTGACGGTGTTGGTACTGTTGGAAGAAAGACTATTAGGTTGGATCGTAAGGTATACGATAAAGCTCATTTCACGGTACTACAGCATATGACTGAGGTGGTGCCGTACGTTGACGAACACCTTGCAGTTATCCGACAAGAGAACCCAGGCCGATCAGAGAGTTGGGTCAGGAATAAGCACATGTCTTCTTTCAACGAGTGGCTGAAGAACCGAATTGCCAGGTTGCAGAACTTGCCTAGTGAAACACTTCAGTGGTTGTCACAGGGTCCTGAATGGAGTGCCACCACCTGGCAAGGATATGACATAAATGGATACACCTTTCACACGGTCAAGCAAGACAGCAAATGCACAGTGCAGAACAGTGGGTTACGCATCGAGGCTGCTAGTGACGGTGGTCGTCGTTATCAATACTATGGTAGAGTTGAGCAAATATTGGAGCTAGATTACTTGAAGTTCAAAGTCCCGTTGTTTCGTTGTCGATGGGTCGATCTTCGCAATGTAAAAGTTGACAATGAAGCTTTCACCACTGTCAACTTGGCTAACAACGCGTACAAGGATGAACCATTCGTTCTCGCCAAACAAGTTGTTCAAGTGTTCTACATAGTTGACCCGTGTAACAAGAAACTACATGTTGTTCGTGAAGGGAAAAGGAGAATTGTTGGATTGGACAATATTGCAGACGAGGATGATTACAACCAGCACGTCCATGGCATAGGTCAAGAAATACCTCTAGAAGAGGAGGAGGAAGAAGATGAAGTTCAATATGCACGTGTCGACCATGAGGAAGGATTATTTTTGTAATTTATGTACGTAGTTTATGTCTACATGTCTGTTATCTGTATAATAATGAAGTGCAATTACTACTGTTAGTGAAATAAAATAATTAAGTATAAAAAAATATGTAGTGTATGTGAAAATATGTTAAGGAAAATAAAAGAACTAAGTGAAATAAAATAAAATAAAATTGCTCTAGGCAAACTCACCTGTGACGGGCTCTATCTGTAGGGCCGTCACAGGTGACCTCACCTGTGACGGCCCAGAGTGCTGGGCCCGTCACAGGTGGTCTTACCTGTGACGGCTCCACGGTTGGCGCCCATCACAGGTGAGGCCACCTGTGACAGCCACATAGTTGGAGCCCGTCACAGGTGAGTTTGACTAGGGTTGACCTAGGGTTGGACATCTTCTAGATCGATCCAGATCCGGCGCCCACTCTCACTCACTCACTCTCTCGACCGCCGCCTCGCCTCTCTCGACCTCTCTGCCGCCCTCTACGCCCTCCTCTCCACCGCCGCCTCGACCTCTCCACCGACGCCGGCCTGCACCACCGCCGCCGCACTCACTCTCTCGACCGCCGCCATCCATCTCCACCGCCATCTCCACCGTCGCCGTCTCGACCTCTCCGCCGCCATCTCCGCCGCCATCCAGACCCTCCTCGCCGCCGCCCTCTCTGCCGCCATCTCCGCCCTCTCCGCCGCCCTCGCCGCCTCCTTCTCCACCGCCGCCTCCTCACTCACTCTCTCGACCGCCGCCGTCCTCTCCACCGCCATCTCCACCGTCGCCGCCTCAACCTCTCCTCCGCCCTCTCCGCCGCCATCTCCGCTGCCCTCTCTGCCGCCATCTCTGCCGTCCTCTCCACCGCCATCTCCGCCGCCGCCTCCACCGCCGCCCTCGCCGCCGGTCGTCCTCTCCGCCGTCCGTCCATCGACTTCCCCGACCTCCCCGACCCTGACCTCCCCGACGCCGGGATCCCCGACCACCGCCGACCGCCTCGACCTCTTCGCCACTGCCTCTCCGCCGCCGCCACTAGGATCCAGGACGACTACGGCCTGCGCCGCCGTCTCCAAGTACGCCGCTTCTCCAAGTATGCCGCCACCCTCCCCCATTCCTCCTTTTTTCCGATGGATGAATTGCATTGTTTAGATGAATGAAATGTGATTTGTTGTTTCGATTATTGGTGCTGCTGTATAGATGAATTAAATGTGATTTGTTGTCTGTGGATGTTTTGGATGAATGTAGGGGCTAGATTTTATATACATGATTTTGGTGCAGTGAATCTTAGCATCAATAGAGGATCTTAGCATGAATTTTTAATGCATTTTGTTTTCTATAATTCTTTGATAATTAAGGACCTTTATTAGGTGTAGGGTTTGAAATCTAGTTACAAGGGAAGAATTGATAGATTGGCCGCAGATTTAATGTAGTTCCGAGGTTATCAAACCATCACAGAATACAAAATGCATGGGGAATTTTGGTGGATAGGCCAGTGTAGTCCATGGACGGAACCGACCTAGACACCAAAATTCTCCATGCATTTTGTTTTCTGTCATAATTTGATGATTAAGGAGGCTTTGCAGATTATCTAAACTTGTTGATTTATATACCCTTTTTGTCTATGAATAGGTCAATTGTATGAATTGTTGTTTATATACATGATTTATATACCCTTGCTGCTGCTGCCACAATGATTGTGGGCTGTTTTATTATCTAGACTTGCTTGAATTGAATGGATGAATTGCTGTTTACATGAAGTTAGTAGTACTGTCTCCTTTTTTATCTACACCCCTGCTACTGCCCCTACACTTGTTCACTTGTTCCTTATTAAATGGCCAGTGTAGAGTGGTTATATACCTCTACACTTGTTCTTTTTTTATGCATAAGAACAGATTTTGTGCACTTGCTCTTTTTTTATGCATAAGAACAGATTTTCTGCACTTGCTCTTTTCTTCTGGATTGATAAATGGCCAGTGATGAATTGCTCAATAAGAACAGATTATCTACACTTGTTCATTTTTTTATCTATTCTTCTTTTTGCCCCTGTTGTGGCTCAATAAGTAATGAATTGCTCAATAAGAATAGTTTATCTGTACCCTTATTGTGGGCTGTTTTTTAAATTTGCATGATTGACTCAGTGGTTATATACCTCTACACTTGTTCTTTATGGATAAGAACAGAGTATCTACACTTGTTCTTTTTTTATGCATAAGAACAGATTTTCTGCACTTGCTCTTTTGATGTTATGATTTCCTCTTTTTATCCCTTCATGCAAATGAATATAATTGATGCATATTTCTGAGCAAAACTGAGGCCATATCTTTCATAGTATACCCCGTATTACATGATTTTGGTGCAGTGAATCTTGAATGTGGATTTAAGTGCAACTGCTGCTGTCTATGTTTGCCCTTGCTGTCTATGTTTGCCCATGCTGCTGCCTATGGTTGCAACTGTTAGTTAAGTGCAACTTGAATGTGGATTTAAGTGCCATTTGGACATATAACCATTCATGGAGTGTGTACTGCTATATATGTTGCTAGACCTATTGAATTTTGTGGACTTGCATTTATACTCCTGCTGCTGTTTTATGTCAATCATGCAAATTCTGTACCCTTGCTGCTGCTGTTTTTTAAATTTGAATGATTGATTCAGTGGTTATATACCTCTACACTTGTTCTTTTTTTATGCATAAGAACAGATTTTGTGCACTTGCTCTTTTTTTATGCATAAGAACAGATTTTCTGCACTTGTTCATTTTTTTATCTACAATAATATATGCATGATTTATATACCACTGCTGTTGTTGCCCCTGTACTTCTTGTTAAATGGCCAAGGATGAATTGCTTAATAACATTCTATCTATACCTGTTCTTTTCTTTATGGATAAGAACAGATTATCTACACTTGTTGATTTATATACCCTTGCTGTCTATGTGAATTTCCCTCTGCTGTTGCTGTTTATGTGAATTTCCACCCTGCTGTTGCTGTTTATGTGAATTTCCACCCTGCTGTTGCTGTTTATGTGAATCTCCCCTTGCTGTTGCTGCCCCTGTGGCATATATACCCCTACTGCTGTTATATGGCCCTGCTACTGCTCTTATTGCTGCTATTATATGGCCATGCTGTTGCTACTACTCTAATTTCCTGCACTTGCTCTTTTCCTTATGGATAAGAACAGATGAACTACACTTGTTCTATTTTATTGATAAGAACAGATGAACTACACTTGTCCTATTTTATTTGGGTTGCTTTTTTCTCCTAGTAGCTGATTTCCTCTTTTTATCCCTTCATGCAAATGATTGTAATTGATGCATATTTCTCAGCAAAACTGAGGCCATATCTTTCATAGTATACCCCGTCACTACATTGGATCTAATGCTATTTAGTCTAATGGTAGGAAATTTATAATCTTTTTCGCGAAAGTTAAACCATGTCAATGCCCGGCGCAAACCCGCCCTCCCCAACACCTGCGAGGATCCAGGAAGAAGCAAACCCAACCACAGAGGCAGTTGCCGAAGGTCATCCCGCGACAACGGCGGTCCAACAACCCGAAATTCATGGTAATTTATAGGATAAATTTTCACCACATGACCACATAAATTTTAGCTAGCACCCCTTAGCAAATATTGCCTTCTGTTTGTGCTGCAGAATTGCCGCAGGAACAACATACGTCGATGTCGGGTGAGACAAGTGCAAGTAGGTCTAGTAGAAATCCGCGGTCACAAAATATATGGCCGACCACAGTGCAAGTTATAAGAGAGGTTGACGCTAGTGGTAGGCCCACGGCGCCCAGGACTGTCATTGGAAGATGGTCTAACTGCTGCGGGATAGCGGCACGTGAGAACTTCGGGATCCTCCATAAAGATATCGGGAAGGTCACAGAAGCCGAGAAAGAGCGAGCTTGGACGGCAATGGAGAAATGGTTCACATTTCCAGCCGAAGCAAAGGATAGGCTCAAGCGGAAGGCATTCCAAAAGATGGGCAAAGCTTGGAAGAATTGGAAGTCGAAGCTCTTCACCGAGTATGTCAACCCGCCCGGCAATCATACGCCGTTCGATGAATACCCTCAAATAACCGAAGCGGTGTGGGAGGAATTCTGCTCTCTCAAGACCACCCAAGAGTTTAGGGAATCCAGCGAGGCACATCGCGTACTGCAACAGCGGAATGAGCACCCGCATCGGCTGGGCACCGCAGGGTACATCGGCAAGGAGGCAATATGGGCCCAAGAAGATGCAGCCGCTGCAGCAGCGAATGTCCCTGACCCGTTTTCAGACATCCCTGAACAAAGAGCTCGCAACTGGGCGCGGGCAAGGGGTAAGGTCAACCCGGACGGCTCTGTCACATTTGAGAACAAAAGTGATGCCGTCGTCTATCAGGAACTGGTGAGTTCACTACTTAACCTAACTAATTTCCGTTCGTATAAAGTACAAGTTCGTATAAACGACTATCTTCTTTTCTAGTTGGGCTTGGTTGCTGAACAAGCTTCACAAAGCGAGGTTGAGTCCGCGCCGAAGAGGCGCGAAGATGACATCCTCACAAAGGCGCTCGGAACCAAAGAACATCCTGGCCGAACTCGGGGAATTGGTAGCGATGTGCCCTGGAAGCATGGACTCCCTCAGTACAGCTCCCAATACAGGAAACGGAAAGTCTCCAAGGAAGAGAGGGACGCTCGTTTGAAGGCCGAACTTAAGGTTGAGGTCATTCAAGAACTAGAAGCTAGCATGAATGCAAGGGTGGAAGAAAGGGTTAACAAGGTGCTCGCCGACATGAATATACCCCGAGTCACAACACCTGCTGTGCAACCAACTCCTCGTGTACAACACGACGCGAGTCCGTCACAGCATAGGAGTAGTTGTGCATCCACAGAGGTGCCGGCCCCTGGTCTCCCGATCGCACCACTAGCTGCAGTGGACCACATCGAGGTAATTGTTGTTATCCGATCCATATCTAATAAAAGACATTTACACATTCCAATATTAAATTCAAACTTTCACCTTATGCAGGGCGCAGCACAGTGTGTCCTACTAGCGAGAGTCCACCCAACTTTCGCTCCTGAAGTCGCTGAGGGCATGGCTTTCAAGCCCTCGGTTACAGACAAGGTCCACGGCGCAGACCTGCTAGCTGGGTATGCCAAGGTGTCCATCGATACAGTAAAGGACACCTGGTCAGGCTATCCGCTGCCCGTGCCCCCAAATGATGAAATCATGACTTTGGGCGATGCGCGCAAGACGTTCATACAATGGCCTAAAGAAGACATAGTTGTGAAGATGACTCCTCGTCCAAGTCGACCGACGGAGCTTACACCTCCCAAGTCTAAGCTATCAATTGAGGCTCCCCGTGGACCGGCATTGTCAGTACCTCATTCTCCCGGTGGAGCTGATATGGACTTGGCAGATATAGCTCAAAGCTTGGCTCCAATAAAGACCACAAGAAAGGCCGATAGCTCCCCACCACTTGTCAAGGGCCAGAAGCGTGAACGAGGCAAGGGGAAGGTCGGGGAGTTGGCGCCGGAGCCAAAAAGGGGCAAGGCTGCGACGTCGATGCCGGTGAGCAAATCGGGGAAGGTCGTGAGGGCGCCAGCCCAATTTGAGCTAGGCATGCCATTGGTGGAGGACAATGTGTTAGCTGTGATGGGTATTGCTTGCCGAGAGCTACATAAGCAATACATGGAGCTAAGCAATGCCAAGCGGAAAATGAGGGAGTCATCCATAGTTGGACATCACGACCACCAGCCGTTCCTATCGTCGCCTGCCTATATAACTATAGGCTTTGATGACCTCTTCGACCTTTTCAGGATCCGGAAGTTGGACACTGGTCTTCTAAAATGCTACTCCTTGTAAGTGCATACCTTCTATACTTGTGATATGACTGGACTATATCTCCTAATTAAATTAGTTCTAATACGTAAATATTTTAAGGTTGTGTTGGATCGAGAGTCGTCGCCATGGTAATCAGGTTGGGTTCCTTGATCCATCCATGGTAAATGAGGTTAATTTACGACAGAGCTTCACTGAGGTGGTTGACTATGTCAACCGGTGTTTATGGGCCCATCAAGACAAGGAGTACATCATGTGCGCACACAACCAAGAGTAAGAGGACAATACCCTTCGTGTATATTGTTTTTGAAGTTAAGGTTCTTAGTACTAACGCTACATAACCACTGCGCAGGCGACATTGGATTCTCCTAGTCATCGTACCTAAGTGGAGTAGGGTTACCTACCTTAACTCCAATAAGTCCAAAGATTATGATTTCAGTGAAATCACCAAGGCCTTAAATATGGCTTGGGGCCCATATGTGGAAAAGGGTGGTAGGCACAAGGAGGGCAAGAATGAACTTTATCATGACACCAAGTTTGCATGCGCACAACAGATCGGAGACCAATGTGGTTTCCACGTGTGCCACAACATGTCAACACTTCTAAGAGAGGTGAAAGATTTCGACCCTGAGGTTGTTGCTAATGGCGAATAAGCTCATTTCAATATCTACATTGCTATTCAAAACGTGCTAATTAACCTCTTATTTATTAAACAGAAAGGTAGAGCTGGCTTCAAGATCTCACCCATCAACCCCCCCGCTATCAGAGGCGAATTGTGCGCCTTTATTCTTGCAGAAATAATGAACAAGAAAGGACGTTTTCATGCCAAATAGACTCATGAACTTGGCTAGATAATTTATTGTGATGTAAAAAAGATGTTTTTATAATTTCTGGCGATGTAAAAAATTATGTTTTTATAGAGTGCAATGTAATTTACTTTCATATGTGCAATATTTATGGTACTTTACTAAATTGTCATCACATTTGATCAACTACGATTTATGTTGTACTATTCATCTGTTTTCTCCTTTTTTTTTCCCTTATTGACAGGTTGTGGAGGTTCACAACGAACAGAATACAAGAAATTTTGGTAATCATTTGAGGACTTTCATGGGGTATGAATTGTGTGCTATAATAAATTAAATTGTTGCATATGTGATGTTGTAAATTGTTGCTTTGTGATGGATCTGTGATATGTGATGCATCTGTGATGTTGGGCAGTTGGGGAATATGTGATATGGAGGGGGGGTGACTGGCACCTGTGATGTTTCTGTTTTTCAGAGGGCATGGCTAGCAATTCCTGAGGCTAGCCAATATTTAGCATTTATTTTTTTTCTGGAATTAACTCATCAGTGACGGTTCGGAAGAAACATCCGTCACAGGTAACCTCACCTGTGACGGACTCGCAAACGTCGGACCGTCACAGGTGACCCACCTGTGACGGGCTTTTACTTTCGGGCCCGTCACAGGTGGGTCACCCTGTGACGGCTACTATATACCGGAGATCATCACCTCTGACGGGCCTTTATTTAGGGGCTCGTCAGAGATGAGACACCTGTGACGGGTCCTAACAAGCCCTAGTCTAGCTTAGACCAACACCTCTGACGGCCTTCTATTAACTTGCCCGTCAGAGGTGGATGTCACCACTGACGGCCGGCCACCCGTCAAAGGTGACTGGACTTACCAGTGACCACTGATCACTGACCAAGCCCAAAACCGTCAAAGGTGAGGGTTTGGGCCCGTCACAGGTGACCTTGACCAGTGTAGTGAGTGTGGTTCTGCTGTAGTTCGTTTGTATATATATAGTTCGATTTCTCCTATTGCATGCCCTCTTAATTTTGTGTACACAAACTGAATGCCTATTATAAAGG'
    # cur_segments = [('N_164346', [('NC_029261.1', 20610928, 20621109, 20621109-20610928+1, copy_seq1),
    #                                     ('NC_029260.1', 11013741, 11023946, 11023946-11013741+1, copy_seq2),
    #                                     #('NC_029267.1', 17312986, 17324427, 17324427-17312986 + 1, copy_seq3)
    #                                     ])]
    # search_confident_tir_batch(cur_segments, flanking_len, tir_tsd_dir, TRsearch_dir, partition_index, plant)


    # tmp_output_dir = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/oryza_sativa'
    # reference = tmp_output_dir + '/GCF_001433935.1_IRGSP-1.0_genomic.fna'
    # ref_names, ref_contigs = read_fasta(reference)
    # repeats_path = (tmp_output_dir + '/longest_repeats_blast/12247.fa', tmp_output_dir + '/repeats_0.fa', tmp_output_dir + '/longest_repeats_blast/12247.out', ref_contigs)
    # blast_program_dir = '/public/home/hpc194701009/repeat_detect_tools/rmblast-2.9.0-p2'
    # fixed_extend_base_threshold = 1000
    # max_single_repeat_len = 30000
    # get_longest_repeats_v1(repeats_path, blast_program_dir, fixed_extend_base_threshold, max_single_repeat_len)

    # tmp_output_dir = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/oryza_sativa'
    # reference = tmp_output_dir + '/GCF_001433935.1_IRGSP-1.0_genomic.fna'
    # ref_index = 0
    # threads = 48
    # valid_TIR_path = tmp_output_dir + '/longest_repeats_' + str(ref_index) + '.rename.fa'
    # blastnResults_path = tmp_output_dir + '/valid_tir.ref.out'
    # valid_tir_blast_dir = tmp_output_dir + '/valid_tir_blast'
    # all_copies = get_copies(blastnResults_path, valid_TIR_path, reference, query_coverage=0.99, threads=threads)
    # test_path = tmp_output_dir + '/ltr_test/test1.fa'
    # blastnResults_path = tmp_output_dir + '/ltr_test/test1.out'
    # blast_program_dir = '/public/home/hpc194701009/repeat_detect_tools/rmblast-2.9.0-p2'
    # temp_dir = tmp_output_dir + '/ltr_test/test1_blast'
    # multi_process_align(test_path, reference, blastnResults_path, blast_program_dir, temp_dir, threads)
    # all_copies = get_copies(blastnResults_path, test_path, reference, threads=threads)
    #
    # # 在copies的两端 flanking 20bp的序列
    # flanking_len = 20
    # all_copies = flanking_copies(all_copies, reference, flanking_len, copy_num=10)
    #
    # # 判断copy的TSD信息
    # # tsd_info = {query_name: {copy1: tsd+','+seq}, {copy2: tsd+','+seq}, {total_copy_num:}, {tsd_copy_num:}}
    # tsd_info = get_TSD(all_copies, flanking_len)
    #
    # copy_info_path = tmp_output_dir + '/ltr_test/test1.copies.info'
    # store_copies(tsd_info, copy_info_path)

    tmp_output_dir = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/oryza_sativa'
    cut_ltr_tsd_path = tmp_output_dir + '/candidate_ltr_cut_0.fa'
    reanme_cut_ltr_tsd_path = tmp_output_dir + '/candidate_ltr_cut_0.rename.fa'
    # reference = tmp_output_dir + '/GCF_000004555.2_CB4_genomic.fna'
    # flanking_len = 100
    # threads = 48
    # ref_index = 0
    # raw_candidate_ltrs_file = tmp_output_dir + '/raw_candidate_ltr_' + str(ref_index) + '.fa'
    # # 1.因为现在的TIR序列不能准确的确定边界，因此下面的步骤都是为了能够准确获得边界
    # valid_TIR_path = tmp_output_dir + '/longest_repeats_' + str(ref_index) + '.rename.fa'
    # blastnResults_path = tmp_output_dir + '/valid_tir.ref.out'
    # valid_tir_blast_dir = tmp_output_dir + '/valid_tir_blast'
    # all_copies = get_copies(blastnResults_path, valid_TIR_path, reference, query_coverage=0.99, threads=threads)
    #
    # raw_candidate_ltrs = generate_candidate_ltrs(all_copies, reference, flanking_len)
    # # raw_candidate_ltrs，在后面的judge LTR 会用到
    # with codecs.open(raw_candidate_ltrs_file, 'w', encoding='utf-8') as f:
    #     json.dump(raw_candidate_ltrs, f)


    #reference = '/public/home/hpc194701009/repeat_detect_tools/EDTA-master/genome_test/oryza_sativa/GCF_001433935.1_IRGSP-1.0_genomic.rename.fna'
    ref_index = 0
    # ltrharvest_output = tmp_output_dir + '/GCF_001433935.1_IRGSP-1.0_genomic.rename.fna.finder.combine.scn'
    # candidate_ltr_path = tmp_output_dir + '/candidate_ltr_finder_'+str(ref_index)+'.fa'
    # candidate_ltr_cut_path = tmp_output_dir + '/candidate_ltr_finder_cut_'+str(ref_index)+'.fa'
    # store_LTR_seq_v1(ltrharvest_output, reference, candidate_ltr_path, candidate_ltr_cut_path)
    #
    # candidate_ltr_cut_path = tmp_output_dir + '/candidate_ltr_finder_cut.fa'
    # candidate_ltr_cut_rename = tmp_output_dir + '/candidate_ltr_finder_cut.rename.fa'
    # rename_fasta(candidate_ltr_cut_path, candidate_ltr_cut_rename)

    # # reference = tmp_output_dir + '/dmel-all-chromosome-r5.43.fasta'
    # # ltrharvest_output = tmp_output_dir + '/genome.fa.harvest.scn'
    # candidate_ltr_path = tmp_output_dir + '/candidate_ltr_harvest.fa'
    # candidate_ltr_cut_path = tmp_output_dir + '/candidate_ltr_harvest_cut.fa'
    # # store_LTR_seq(ltrharvest_output, reference, candidate_ltr_path, candidate_ltr_cut_path)
    # candidate_ltr_cut_rename = tmp_output_dir + '/candidate_ltr_harvest_cut.rename.fa'
    # rename_fasta(candidate_ltr_cut_path, candidate_ltr_cut_rename)

    # candidate_TIRs = {}
    # all_candidate_TIRs_path = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/cb4/tir_tsd_temp/9.fa'
    # all_copies_out = all_candidate_TIRs_path + '.itr'
    # all_copies_out_name, all_copies_out_contigs = read_fasta(all_copies_out)
    #
    # # 对all_copies_out_contigs按照name进行分组
    # # group_copies_contigs -> {query_name: {name: seq}}
    # group_copies_contigs = {}
    # for cur_name in all_copies_out_contigs.keys():
    #     query_name = cur_name.split('-C_')[0]
    #     if not group_copies_contigs.__contains__(query_name):
    #         group_copies_contigs[query_name] = {}
    #     cur_copies_out_contigs = group_copies_contigs[query_name]
    #     cur_copies_out_contigs[cur_name] = all_copies_out_contigs[cur_name]
    #
    # for query_name in group_copies_contigs.keys():
    #     cur_copies_out_contigs = group_copies_contigs[query_name]
    #     TSD_len_count = {}
    #     copies_candidate = {}
    #     tsd_copy = {}
    #
    #     # 1.过滤假阳性TSD
    #     # 去掉那些在不同copy_index中多次（超过一半）出现的TSD，这些大概率不是真实的TSD。
    #     # 因为除了2bp TA, 3bp TAA/TTA, 4bp TTAA之外， 真实的TSD应该在所有的拷贝中不同
    #     # tsd_copy -> {tsd: {copy_index1:[name1, name2], copy_index2: []}}
    #     total_copy_index = set()
    #     for name in cur_copies_out_contigs.keys():
    #         copy_index = int(name.split('-C_')[1].split('_')[0])
    #         total_copy_index.add(copy_index)
    #         tsd_seq = name.split('-tsd_')[1].split('-')[0]
    #         if not tsd_copy.__contains__(tsd_seq):
    #             tsd_copy[tsd_seq] = {}
    #         copy_index_dict = tsd_copy[tsd_seq]
    #         if not copy_index_dict.__contains__(copy_index):
    #             copy_index_dict[copy_index] = []
    #         copy_index_list = copy_index_dict[copy_index]
    #         copy_index_list.append(name)
    #
    #     for tsd_seq in tsd_copy.keys():
    #         if tsd_seq == 'TA' or tsd_seq == 'TTA' or tsd_seq == 'TAA' or tsd_seq == 'TTAA':
    #             continue
    #         copy_index_dict = tsd_copy[tsd_seq]
    #         if float(len(copy_index_dict)) / len(total_copy_index) > 0.5:
    #             # 该TSD为假阳性序列，在cur_copies_out_contigs删除这些序列
    #             for copy_index in copy_index_dict.keys():
    #                 for name in copy_index_dict[copy_index]:
    #                     del cur_copies_out_contigs[name]
    #
    #     # 2. 合并，选择distance最小（相同则取最长）的那条序列,当做这条拷贝的代表序列
    #     # 根据name中的copy_index进行分组，copy_index = name.split('-C_')[1].split('_')[0]。
    #     # copies_candidate -> {copy_index: (min_distance_seq_name, min_distance, tsd)}
    #     for name in cur_copies_out_contigs.keys():
    #         copy_index = int(name.split('-C_')[1].split('_')[0])
    #         cur_distance = int(name.split('-distance_')[1])
    #         tsd_seq = name.split('-tsd_')[1].split('-')[0]
    #         seq_len = len(cur_copies_out_contigs[name])
    #         if not copies_candidate.__contains__(copy_index):
    #             copies_candidate[copy_index] = (name, cur_distance, tsd_seq, seq_len)
    #         else:
    #             last_min_item = copies_candidate[copy_index]
    #             if (cur_distance == last_min_item[1] and seq_len > last_min_item[3]) or cur_distance < last_min_item[1]:
    #                 copies_candidate[copy_index] = (name, cur_distance, tsd_seq, seq_len)
    #
    #     # 遍历copies_candidate，统计出现次数最多的tsd_len
    #     for copy_index in copies_candidate.keys():
    #         item = copies_candidate[copy_index]
    #         cur_tsd_len = len(item[2])
    #         if not TSD_len_count.__contains__(cur_tsd_len):
    #             TSD_len_count[cur_tsd_len] = []
    #         query_names = TSD_len_count[cur_tsd_len]
    #         query_names.append(item[0])
    #
    #     # 判断当前拷贝中哪一个长度的TSD出现次数最多，那么该TSD对应的拷贝，最有可能是真实的TIR
    #     max_count = 0
    #     max_count_tsd_len = -1
    #     for tsd_len in TSD_len_count.keys():
    #         query_names = TSD_len_count[tsd_len]
    #         if len(query_names) > max_count:
    #             max_count = len(query_names)
    #             max_count_tsd_len = tsd_len
    #     # 取一条具有最多次数TSD长度的拷贝, 次数至少>=2
    #     if max_count_tsd_len != -1 and max_count >= 2:
    #         query_names = TSD_len_count[max_count_tsd_len]
    #         first_query_name = query_names[0]
    #         seq = cur_copies_out_contigs[first_query_name]
    #         candidate_TIRs[first_query_name] = seq
    # seq = 'AAAAATTTTT'
    # start_seq = seq[0:5]
    # end_seq = seq[-5:]
    # print(start_seq, end_seq)

    #统计longest_repeats_blast中最大的文件有多大
    # library_dir = os.getcwd() + '/library'
    # other_TE_lib = library_dir + '/other_TE.lib'
    # names, contigs = read_fasta(other_TE_lib)
    # for name in names:
    #     seq = contigs[name]
    #     new_seq = ''
    #     for i, ch in enumerate(seq):
    #         if ch == 'A' or ch == 'T' or ch == 'C' or ch == 'G':
    #             new_seq += ch
    #         else:
    #             new_seq += 'N'
    #     contigs[name] = new_seq
    # store_fasta(contigs, other_TE_lib)

    # flanking_region_distance = 10
    # flanking_len = 50
    # output_path = '/public/home/hpc194701009/KmerRepFinder_test/library/KmerRepFinder_lib/test_2022_0914/oryza_sativa/flank_tir_align/N_200524-C_0_14-tsd_TA-distance_41.out'
    # judge_flank_align(flanking_region_distance, output_path, flanking_len)
    log = Logger('HiTE.log', level='debug')
    blast_program_dir = '/public/home/hpc194701009/repeat_detect_tools/rmblast-2.9.0-p2'
    threads = 48
    flanking_len = 50
    #TRsearch_dir = '/public/home/hpc194701009/repeat_detect_tools/REPET_linux-x64-3.0/bin'
    reference = tmp_output_dir + '/GCF_001433935.1_IRGSP-1.0_genomic.fna.cut0.fa'
    repeats_path = tmp_output_dir + '/tir_tsd_' + str(ref_index) + '.filter_tandem.fa'
    is_transposons(repeats_path, reference, threads, tmp_output_dir, flanking_len, blast_program_dir, log)

    # longest_repeats_flanked_copies_file = tmp_output_dir + '/longest_repeats_0.flanked.copies'
    # file = open(longest_repeats_flanked_copies_file, 'r')
    # js = file.read()
    # all_copies = json.loads(js)
    # tir_tsd_dir = tmp_output_dir + '/tir_tsd_temp'
    # partition_index = -1
    # plant = 1
    # for name in all_copies.keys():
    #     if name == 'N_117446':
    #         cur_segments = [(name, all_copies[name])]
    #         search_confident_tir_batch(cur_segments, flanking_len, tir_tsd_dir, TRsearch_dir, partition_index,
    #                                    plant)
