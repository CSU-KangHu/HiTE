#!/bin/bash
if [ $# -ne 3 ] 
then 
    echo -e "\nUSAGE:         $(basename $0) <input.multi.fa> <max> <keep_largest>"
   
    echo -e "\nDESCRIPTION: The script generates a multifasta file containing <max> sequences obtained from the input file"    
    echo -e "               Firstly, it takes the <keep_largest> largest  sequences from the input <input.multi.fa>."
    echo -e "               Secondly, a total of '<max> - <keep_largest>' sequences are randomly selected from the input (without including 				    the <keep_largest> largest ones) add to the largest ones"
     echo -e "              Thus a rdmSubset.fa file is created containing a combination of largest sequences and randomly selected sequences. Note that the user could vary the value of <keep_largest> from 0 to <max>. If for example the value 0 was set, only randomly selected sequences would be included in the output.
  
In addition, the script also creates a *subset.len file, which indicates the lenghts and genomic coordinates corresponding to the subset of selected sequences."
      echo -e "             If <input.multi.fa> has fewer sequences than <max_number_sequences>, then the script would not have any effect and a message is printed to stdout."
               
   echo -e "\nINPUT:        <input.multi.fa> is a multi-fasta file (e.g the 'file.bed.flank.fa' file generated by running 'make_fasta_from_blast.sh')."
   echo -e "              <max> must be a positive integer."
   echo -e "		  <keep_largest> can be any integer ranging from zero to <max> "
   
   echo -e "\nOUTPUT:     rdmSubset.fa and rdmSubset.len files " 
   echo -e "REQUIRES:     Samtools must be installed"
			     
    exit
    
fi

fasta="$1"
max=$2
largest=$3

samtools faidx $fasta

export P="$fasta.fai"
temp=$(wc -l < "$P") # temp variable is initialized with an integer corresponding to the number of sequences in the multiFasta file. 
if [ $temp -gt $max ] # Only files with more sequences than the user selected threshold enter the if statement. 
    then
	if [ $largest -ge 0 ] && [ $largest -le $max ]
		then        
        		sort -nk 2 -r $fasta.fai > $fasta.fai.sortedbylength 
        		l=$largest  #l is the number of largest sequences to be selected
        		r=$max-$largest #r is the number sequences to be randomly selected
        		head -$l $fasta.fai.sortedbylength | awk '{print $1}' >> $fasta.headers #headears of "l" largest seqs
        		awk "NR> "$l" {print}" < $fasta.fai.sortedbylength > $fasta.temp
        		sort -R $fasta.temp | head -$r | awk '{print $1}' >> $fasta.headers #headers of "l" plus "r" random seqs 
        		grep -A 1 -f $fasta.headers $fasta | sed '/^--/d' > $fasta.rdmSubset.fa  
        		awk 'FNR==NR{a[$1]=$2;next} {print $1,a[$1]}' $fasta.fai $fasta.headers | sort -nk 2 -r >> $fasta.rdmSubset.len
        		rm $fasta.fai.sortedbylength $fasta.headers $fasta.temp 
		else
			echo "I am sorry, the <keep_largest> parameter should be an integer value ranging from zero to <max>"
		fi
    	else
        	echo "I am sorry, the number of sequences in the multifasta file named "$fasta", should be greater than the selected threshold of $max"
fi
rm $fasta.fai
